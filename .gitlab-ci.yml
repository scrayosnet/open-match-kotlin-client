image: 'registry.scrayos.net/scrayosnet/dev-envs/gradle:8.8-jdk21'

include:
- project: scrayosnet/ci-configuration
  file: /fragments/gradle-base.yml


stages:
- 'compile'
- 'test'
- 'coverage'
- 'quality assurance'
- 'deploy'
- 'release'


.job-defaults: &job-defaults
  interruptible: true

.release-job: &release-job
  <<: *job-defaults
  rules:
  - if: '$CI_COMMIT_TAG'
  allow_failure: false

.production-job: &production-job
  <<: *job-defaults
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'
  - if: '$CI_COMMIT_BRANCH =~ /^hotfix\/.+$/'
  - if: '$CI_COMMIT_TAG'
  # failure can be decided for each job individually

.development-job: &development-job
  <<: *job-defaults
  rules:
  - if: '$CI_COMMIT_BRANCH =~ /^dev\/.+$/'
  allow_failure: true


# compile

compile:
  interruptible: true
  dependencies: []
  needs: []
  stage: 'compile'
  script:
  - './gradlew assemble'


# test

.test: &test
  interruptible: true
  dependencies: []
  needs:
  - 'compile'
  stage: 'test'
  services:
  - 'docker:dind'
  variables:
    DOCKER_HOST: 'tcp://docker:2375'
    DOCKER_TLS_CERTDIR: ''
  script:
  - './gradlew check'
  artifacts:
    paths:
    - 'build/test-results/test/'
    - 'build/reports/ktlint/'
    reports:
      junit:
      - 'build/test-results/test/TEST-*.xml'
    when: 'always'

test-production:
  <<: *test
  <<: *production-job

test-development:
  <<: *test
  <<: *development-job


# kover

.kover: &kover
  interruptible: true
  stage: 'coverage'
  script:
  - './gradlew koverXmlReport koverLog'
  artifacts:
    paths:
    - 'build/reports/kover'
    when: 'always'
  coverage: '/application line coverage: (\d+(?:\.\d+)?)%/'

kover-production:
  dependencies:
  - 'test-production'
  needs:
  - 'test-production'
  <<: *kover
  <<: *production-job

kover-development:
  dependencies:
  - 'test-development'
  needs:
  - 'test-development'
  <<: *kover
  <<: *development-job


# sonarqube

.sonarqube: &sonarqube
  interruptible: true
  stage: 'quality assurance'
  script:
  - './gradlew sonar -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.token=$SONAR_TOKEN -Dsonar.qualitygate.wait=true'

sonarqube-production:
  dependencies:
  - 'kover-production'
  - 'test-production'
  needs:
  - 'kover-production'
  - 'test-production'
  <<: *sonarqube
  <<: *production-job

sonarqube-development:
  dependencies:
  - 'kover-development'
  - 'test-development'
  needs:
  - 'kover-development'
  - 'test-development'
  <<: *sonarqube
  <<: *development-job


# deploy

maven:
  stage: 'deploy'
  dependencies: []
  needs:
  - 'test-production'
  script:
  - './gradlew publish'
  artifacts:
    paths:
    - 'build/libs/*'
  <<: *production-job


# release

release:
  stage: 'release'
  cache: []
  dependencies: []
  needs:
  - 'maven'
  image: 'registry.gitlab.com/gitlab-org/release-cli:latest'
  # necessary until https://gitlab.com/gitlab-org/gitlab/-/issues/223856
  script:
  - 'echo Preparing Release'
  release:
    name: '$CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    description: '${RELEASE_DESCRIPTION}'
  <<: *release-job
